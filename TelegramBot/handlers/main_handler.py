from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.utils.formatting import Text
from aiogram.fsm.state import StatesGroup, State

from data_base import get_db
from data_base import User
from sqlalchemy.orm import Session
from keyboards import keyboards

router = Router()

class MainForms(StatesGroup):
    choosing = State()
    blank = State()

@router.message(Command("start"))
async def main_cmd_start(message: Message, state: FSMContext):
    db: Session = next(get_db())
    user = db.query(User).filter(User.telegram_id == message.from_user.id).first()
    if (user):
        await state.update_data(cur_user=user)
        content = Text(
            "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –∑–∞–∫–∞–∑—á–∏–∫–∞."
        )
        await message.answer(
            **content.as_kwargs(),
            reply_markup=keyboards.user_menu()
        )
        await state.set_state(MainForms.choosing)
    else:
        content = Text(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Å–µ—Ä–≤–∏—Å—É MoveBro! üöö \n"
            "–° –ø–æ–º–æ—â—å—é –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å: \n"
            "1. üì¶ –î–µ—à–µ–≤–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤. \n"
            "2. üïí –£–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –∑–∞–∫–∞–∑. \n"
            "3. üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É —É–¥–æ–±–Ω—ã–º –¥–ª—è —Ç–µ–±—è —Å–ø–æ—Å–æ–±–æ–º. \n"
            "4. üó∫Ô∏è –°—Ç–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–º –∏ —Å–∞–º–æ–º—É –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º –ª—é–¥—è–º! \n"
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è."
        )
        await message.answer(
            **content.as_kwargs()
        )
        content = Text("–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ \"–ù–∞—á–∞—Ç—å\"")
        await message.answer(
            **content.as_kwargs(),
            reply_markup=keyboards.get_ready()
        )
        await state.set_state(MainForms.blank)